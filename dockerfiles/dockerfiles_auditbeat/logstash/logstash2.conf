input {
  beats{
	port => 5044
  }
}
filter {   
 uuid {
        target    => "id"
      }
#if module is file
 if [event][module] == "file_integrity"{
    mutate{  
       add_field =>{        
                      "[pathfile]"=>"%{[file][path]}"
                      "[eventname]"=>"%{[event][action]}"
                      "[hostname]"=>"%{[host][name]}"
                      "[host_os_platform]"=>"%{[host][os][platform]}"
                      "[host_os_version]"=>"%{[host][os][version]}"
		      "[host_arch]"=>"%{[host][architecture]}"
                      
		      
                      
          }
  }
   #if file is non-directory or action is delete
      if [hash][sha1] {
          mutate {
           add_field =>{ "[hash_sha1]"=>"%{[hash][sha1]}" }   
         }
       }
   if [file][mtime] {
          mutate {
           add_field =>{ "[timestamp]"=>"%{[file][mtime]}" }   
         }
       }
   if [file][owner] {
          mutate {
           add_field =>{ "[username]"=>"%{[file][owner]}" }   
         }
       }
   if [file][type] {
          mutate {
           add_field =>{ "[filetype]"=>"%{[file][type]}" }   
         }
       }

    mutate{
     remove_field => ["agent","tags","ecs","@version","event","service","file","hash","beat","host"]
  } 

# If module is i watch
 } else if [input][type]== "log" {
    grok {
       match => { "message" => [
         "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{DATA:programname}(?:\[%{POSINT:pid}\])?: %{DATA:eventname} %{GREEDYDATA:pathfile}"
             ]
          }
     }

    if [eventname] == "message" {
       grok {
       match => { "pathfile" => [
         " %{GREEDYDATA:eventname} IN_OPEN %{GREEDYDATA:pathfile}]"
             ]
          }
       overwrite => ["pathfile"]
     }
       mutate {
        update => { "eventname" => "IN_OPEN" }
      }
     }
      date{
       locale => "en"
       match => ["timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601" ]
       target => "timestamp"   
       } 
     mutate {
        remove_field => ["agent","tags","ecs","log","host","@version","input","message"]
     }
  
# If module is system
 } else if [event][module] == "system" {
    mutate{      
       add_field =>{ 
                      "[pid]"=>"%{[process][pid]}"
                      "[hostname]"=>"%{[host][name]}"
                      "[eventname]"=>"%{[event][action]}"
                      "[host_os_platform]"=>"%{[host][os][platform]}"
                      "[host_os_version]"=>"%{[host][os][version]}"
		      "[host_arch]"=>"%{[host][architecture]}"   
                              
          }
        }

     if [process][start] {
          mutate {
           add_field =>{ "[timestamp]"=>"%{[process][start]}" }   
         }
       }
    if [process][executable] {
          mutate {
           add_field =>{ "[programname]"=>"%{[process][executable]}" }   
         }
       }
  if [process][working_directory] {
          mutate {
           add_field =>{ "[workdir]"=>"%{[process][working_directory]}" }   
         }
       }
  if [user][name] {
          mutate {
           add_field =>{ "[username]"=>"%{[user][name]}" }   
         }
       }

    if [source][ip] {
          mutate {
           add_field =>{ "[source_ip]"=>"%{[source][ip]}" }   
         }
       }
   mutate{
      remove_field => ["agent","tags","ecs","@version","host","user","event","process","service","error","source","beat"]
   }

  } else {
    drop{}
 }
}
output {
  #stdout {}
  websocket {}
  #file {
  #      path => "/home/output.json"
  #  }
}