input {
  beats{
	port => 5044
  }
}
filter {
grok {
       match => { "message" => "%{SYSLOGBASE}"}
     }
     date{
       locale => "en"
       timezone => "Europe/Vienna"
       match => ["timestamp", "MMM dd yyyy HH:mm:ss", "MMM  d yyyy HH:mm:ss", "ISO8601" ]
       target => "timestamp"   
     }
     syslog_pri{}
     mutate{
       convert => {syslog_pid => "integer"
                   syslog_severity_code => "integer"
                   syslog_facility_code => "integer"}
       add_field =>{ 
                     "[@context]"=>"https://schema.org/"
                      "[@type]"=>"http://purl.org/sepses/vocab/log/sysLog#SysLogEntry"
                      "[hasProcessId]"=>"%{pid}"
                      "[hasSeverity][severityCode]"=>"%{syslog_severity_code}"
                      "[hasFacility][facilityCode]"=>"%{syslog_facility_code}"
                      "[hasProgram][programName]"=>"%{program}"
                      "[hasSeverity][severityName]"=>"%{syslog_severity}"
                      "[hasFacility][facilityName]"=>"%{syslog_facility}" 
                       
          }
      remove_field =>["program","pid","syslog_program","syslog_pid","syslog_facility_code","syslog_facility","syslog_severity_code", "syslog_severity"]
     }
  mutate{
    

     add_field => { "[@id]"=>"http://example.org/logEntry#logEntry-%{offset}"
                    "[timestamp]" => "%{timestamp}"
                    "[logMessage]"=> "%{message}"
                    "[logFilePath]" =>  "%{source}"
                    "[hasLogType]" => "http://example.org/system#%{log-type}"
                    "[originatesFrom][hostName]" => "%{host}"
              
        }

     remove_field => ["logsource","tags","beat","prospector","@timestamp","@version","offset","message","source","host","log-type"]
     }
}
output {
  #stdout { codec => json }
  websocket {}
  file {
        path => "/home/output.json"
    }
}